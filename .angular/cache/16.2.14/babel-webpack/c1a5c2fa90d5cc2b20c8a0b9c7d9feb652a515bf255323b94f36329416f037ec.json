{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { faCircleExclamation, faCircleCheck, faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\nexport let NumberGameComponent = class NumberGameComponent {\n  constructor() {\n    this.generatedNumbers = [];\n    this.numbersClicked = [];\n    this.secretNumbersVisible = false;\n    this.resultMessage = null;\n    this.faCircleExclamation = faCircleExclamation;\n    this.faCircleCheck = faCircleCheck;\n    this.faEye = faEye;\n    this.faEyeSlash = faEyeSlash;\n  }\n  ngOnInit() {}\n  generateRandomNumbers() {\n    this.generatedNumbers = [];\n    while (this.generatedNumbers.length < 15) {\n      const randomNumber = Math.floor(Math.random() * 25) + 1;\n      if (this.generatedNumbers.indexOf(randomNumber) === -1) {\n        this.generatedNumbers.push(randomNumber);\n      }\n    }\n    this.generatedNumbers.sort((a, b) => a - b);\n  }\n  toggleSecretNumbers() {\n    this.secretNumbersVisible = !this.secretNumbersVisible;\n  }\n  checkResults() {\n    if (this.numbersClicked.toString() === '' || this.generatedNumbers.toString() === '') {\n      this.resultMessage = {\n        icon: this.faCircleExclamation,\n        text: 'Você Precisa Gerar os numeros ou Selecionar na Cartela'\n      };\n    } else if (this.numbersClicked.toString() === this.generatedNumbers.toString()) {\n      this.resultMessage = {\n        icon: this.faCircleCheck,\n        text: 'Parabéns você ganhou! Números selecionados: ' + this.numbersClicked.join(' ')\n      };\n    } else {\n      this.resultMessage = {\n        icon: this.faCircleExclamation,\n        text: 'Não foi dessa vez! Números selecionados: ' + this.numbersClicked.join(' ')\n      };\n    }\n  }\n  restartGame() {\n    this.generatedNumbers = [];\n    this.numbersClicked = [];\n    this.secretNumbersVisible = false;\n    this.resultMessage = null;\n  }\n  selectNumber(number) {\n    if (this.numbersClicked.includes(number)) {\n      this.numbersClicked.splice(this.numbersClicked.indexOf(number), 1);\n    } else {\n      this.numbersClicked.push(number);\n    }\n  }\n};\nNumberGameComponent = __decorate([Component({\n  selector: 'app-number-game',\n  templateUrl: './home.component.html',\n  styleUrls: ['./number-game.component.css'],\n  imports: [FontAwesomeModule] // Import FontAwesomeModule for icons\n})], NumberGameComponent);","map":{"version":3,"names":["Component","FontAwesomeModule","faCircleExclamation","faCircleCheck","faEye","faEyeSlash","NumberGameComponent","constructor","generatedNumbers","numbersClicked","secretNumbersVisible","resultMessage","ngOnInit","generateRandomNumbers","length","randomNumber","Math","floor","random","indexOf","push","sort","a","b","toggleSecretNumbers","checkResults","toString","icon","text","join","restartGame","selectNumber","number","includes","splice","__decorate","selector","templateUrl","styleUrls","imports"],"sources":["C:\\Users\\caiol\\OneDrive\\Documentos\\supergames\\src\\app\\pages\\home\\home.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { faCircleExclamation, faCircleCheck, faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-number-game',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./number-game.component.css'],\r\n  imports: [FontAwesomeModule], // Import FontAwesomeModule for icons\r\n})\r\nexport class NumberGameComponent implements OnInit {\r\n  generatedNumbers: number[] = [];\r\n  numbersClicked: number[] = [];\r\n  secretNumbersVisible = false;\r\n  resultMessage: { icon: faCircleExclamation | faCircleCheck; text: string } | null = null;\r\n\r\n  faCircleExclamation = faCircleExclamation;\r\n  faCircleCheck = faCircleCheck;\r\n  faEye = faEye;\r\n  faEyeSlash = faEyeSlash;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n\r\n  generateRandomNumbers() {\r\n    this.generatedNumbers = [];\r\n    while (this.generatedNumbers.length < 15) {\r\n      const randomNumber = Math.floor(Math.random() * 25) + 1;\r\n      if (this.generatedNumbers.indexOf(randomNumber) === -1) {\r\n        this.generatedNumbers.push(randomNumber);\r\n      }\r\n    }\r\n    this.generatedNumbers.sort((a, b) => a - b);\r\n  }\r\n\r\n  toggleSecretNumbers() {\r\n    this.secretNumbersVisible = !this.secretNumbersVisible;\r\n  }\r\n\r\n  checkResults() {\r\n    if (this.numbersClicked.toString() === '' || this.generatedNumbers.toString() === '') {\r\n      this.resultMessage = {\r\n        icon: this.faCircleExclamation,\r\n        text: 'Você Precisa Gerar os numeros ou Selecionar na Cartela',\r\n      };\r\n    } else if (this.numbersClicked.toString() === this.generatedNumbers.toString()) {\r\n      this.resultMessage = {\r\n        icon: this.faCircleCheck,\r\n        text: 'Parabéns você ganhou! Números selecionados: ' + this.numbersClicked.join(' '),\r\n      };\r\n    } else {\r\n      this.resultMessage = {\r\n        icon: this.faCircleExclamation,\r\n        text: 'Não foi dessa vez! Números selecionados: ' + this.numbersClicked.join(' '),\r\n      };\r\n    }\r\n  }\r\n\r\n  restartGame() {\r\n    this.generatedNumbers = [];\r\n    this.numbersClicked = [];\r\n    this.secretNumbersVisible = false;\r\n    this.resultMessage = null;\r\n  }\r\n\r\n  selectNumber(number: number) {\r\n    if (this.numbersClicked.includes(number)) {\r\n      this.numbersClicked.splice(this.numbersClicked.indexOf(number), 1);\r\n    } else {\r\n      this.numbersClicked.push(number);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}